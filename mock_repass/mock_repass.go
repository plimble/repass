// Automatically generated by MockGen. DO NOT EDIT!
// Source: github.com/plimble/repass (interfaces: Service)

package mock_repass

import (
	gomock "code.google.com/p/gomock/gomock"
	repass "github.com/plimble/repass"
	mailba "github.com/plimble/mailba"
	time "time"
)

// Mock of Service interface
type MockService struct {
	ctrl     *gomock.Controller
	recorder *_MockServiceRecorder
}

// Recorder for MockService (not exported)
type _MockServiceRecorder struct {
	mock *MockService
}

func NewMockService(ctrl *gomock.Controller) *MockService {
	mock := &MockService{ctrl: ctrl}
	mock.recorder = &_MockServiceRecorder{mock}
	return mock
}

func (_m *MockService) EXPECT() *_MockServiceRecorder {
	return _m.recorder
}

func (_m *MockService) GetToken(_param0 string) (*repass.Token, error) {
	ret := _m.ctrl.Call(_m, "GetToken", _param0)
	ret0, _ := ret[0].(*repass.Token)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

func (_mr *_MockServiceRecorder) GetToken(arg0 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "GetToken", arg0)
}

func (_m *MockService) SendResetPasswordMail(_param0 string, _param1 *mailba.Mail, _param2 time.Duration) (*repass.Token, error) {
	ret := _m.ctrl.Call(_m, "SendResetPasswordMail", _param0, _param1, _param2)
	ret0, _ := ret[0].(*repass.Token)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

func (_mr *_MockServiceRecorder) SendResetPasswordMail(arg0, arg1, arg2 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "SendResetPasswordMail", arg0, arg1, arg2)
}

func (_m *MockService) UseToken(_param0 string) error {
	ret := _m.ctrl.Call(_m, "UseToken", _param0)
	ret0, _ := ret[0].(error)
	return ret0
}

func (_mr *_MockServiceRecorder) UseToken(arg0 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "UseToken", arg0)
}
